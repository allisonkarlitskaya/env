#!/bin/sh -eux

LOCALES="en_US en_CA en_DK de_DE en_IE"
RELEASE=${1:-sid}
DISTRO=${2:-debian}

toolbox rm -f $RELEASE || true
toolbox -y create -c $RELEASE --image docker.io/$DISTRO:$RELEASE

podman start $RELEASE
run() { podman exec -i $RELEASE "$@"; }

graphroot="$(podman info -f '{{.Store.GraphRoot}}')"
subvolume="$(run egrep -o "${graphroot}/btrfs/subvolumes/[0-9a-f]{64}" /proc/mounts | head -n1)"

run umount /var/log/journal

cat <<EOF | run debconf-set-selections
man-db man-db/auto-update boolean false
usrmerge usrmerge/autoconvert boolean true
EOF

cat<<EOF | run tee /etc/apt/sources.list
deb http://deb.debian.org/debian ${RELEASE} main contrib non-free
deb-src http://deb.debian.org/debian ${RELEASE} main contrib non-free
deb http://deb.debian.org/debian-debug ${RELEASE}-debug main contrib non-free
EOF

echo force-unsafe-io | run tee -a /etc/dpkg/dpkg.cfg.d/unsafe-io
echo ${RELEASE} | run tee /etc/hostname
run hostname ${RELEASE}
run ln -Tsf host/run/pcscd /run/pcscd
run ln -Tsf host/run/sshd /run/sshd

run apt-get update
run apt-get install -y eatmydata locales apt-file bash usrmerge
run sed -i "s/nullok_secure/nullok/" /etc/pam.d/common-auth
(for locale in ${LOCALES}; do echo "$locale.UTF-8 UTF-8"; done) | run tee /etc/locale.gen
run locale-gen
run apt-file update

apt() { podman exec -it $RELEASE eatmydata apt "$@"; }

source ./toolbox-packages

apt dist-upgrade -y
apt install -y ${packages} ${debian_packages}
apt build-dep -y ${build_deps}

# debug symbols for everything
AVAILABLE="$(mktemp)"
DEBUGS="$(mktemp)"
DEVSRC="$(mktemp)"
DOCS="$(mktemp)"

trap 'rm -fv "${AVAILABLE}" "${DEBUGS}" "${DEVSRC}" "${DOCS}"' EXIT
run apt-cache pkgnames | sort >"${AVAILABLE}"
run dpkg-query --show --showformat='${Package}-dbgsym\n' | sort >"${DEBUGS}"
apt install $(comm -12 "${AVAILABLE}" "${DEBUGS}")


# for every -dev on the system, install any doc package that shares its source package
run dpkg-query -W -f '${Source}\n' '*-dev' | cut -f 1 -d ' ' | sort -u >"${DEVSRC}"
run apt-cache showsrc $(cat "${DEVSRC}") | sed -n 's/^ \([^ ]*\) deb doc.*$/\1/p' | sort -u >"${DOCS}"
apt install -y --no-install-recommends $(comm -12 "${DOCS}" "${AVAILABLE}")

# link gtk-doc from the container to the Devhelp flatpak
gtkdocdir="${subvolume}/usr/share/gtk-doc"
if test -d "${gtkdocdir}" -a -d ~/.var/app/org.gnome.Devhelp/data; then
  ln -Tsf "${gtkdocdir}" ~/.var/app/org.gnome.Devhelp/data/gtk-doc
fi
